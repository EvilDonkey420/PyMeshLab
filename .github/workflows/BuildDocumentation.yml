name: BuildDocumentation

on: 
  push:
    branches:
      - "master"
       
jobs: 
  unix_build_pymeshlab:
    name: Build PyMeshLab
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
        pyversion: [3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: checkout sub-submodule vcg
      run: |
        cd meshlab
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Merge docs -> master
      uses: devmasx/merge-branch@v1.3.0
      with:
        type: now
        head_to_merge: docs
        target_branch: master
        github_token: ${{ github.token }}
    - name: Remove old files
      run: |
        rm pymeshlab/meshlab*
        rm -r pymeshlab/lib
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        modules: xmlpatterns
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Install Ubuntu dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y mesa-common-dev libglu1-mesa-dev 
    - name: Environment variables
      id: envs
      run: |
        cd meshlab
        echo  ::set-output name=meshlab_commit::$(git rev-parse --short HEAD)
    - name: Cache MeshLab Build
      id: cache-meshlab-build
      uses: actions/cache@v2
      with:
        path: pymeshlab/lib
        key: ${{ runner.os }}-meshlab-${{steps.envs.outputs.meshlab_commit}}
    - name: Install MeshLab-Ubuntu dependencies
      if: steps.cache-meshlab-build.outputs.cache-hit != 'true' && runner.os == 'Linux'
      run: |
        sudo apt-get install -y libgmp-dev libxkbcommon-x11-0 patchelf
    - name: Install MeshLab-MacOS dependencies
      if: steps.cache-meshlab-build.outputs.cache-hit != 'true' && runner.os == 'macOS'
      run: |
        brew install libomp
    - name: Build MeshLab
      if: steps.cache-meshlab-build.outputs.cache-hit != 'true'
      run: |
        sh install/${{ runner.os }}/build_meshlab.sh
    - name: Build PyMeshLab ${{ matrix.pyversion }}
      run: |
        export PYTHON_VERSION=${{ matrix.pyversion }}
        sh install/${{ runner.os }}/build_pymeshlab.sh
    
    - name: Commit message
      id: commit_message
      run: |
        echo  ::set-output name=message::"$(git log -1 --pretty=%B)"
    - name: Add libs
      run: |
        git add --force pymeshlab/meshlab*
        git add --force pymeshlab/lib/*
    - name: Commit change
      uses: stefanzweifel/git-auto-commit-action@v4.1.1
      with:
        commit_message: ${{steps.commit_message.outputs.message}} and add libs
        branch: docs
        push_options: '--force'
