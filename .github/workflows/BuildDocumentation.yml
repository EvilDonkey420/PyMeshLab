name: BuildDocumentation

on: 
  workflow_dispatch
       
jobs:        
  unix_build_pymeshlab:
    name: Build PyMeshLab
    #needs: merge_master_to_docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
        pyversion: [3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: 'docs'
        fetch-depth: 0
        submodules: true
    - name: Checkout sub-submodule vcg
      run: |
        cd meshlab
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Merge master -> docs
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git merge -X theirs origin/master
    - name: Remove old files
      run: |
        if [[ -f pymeshlab/meshlab* ]]; then
          rm pymeshlab/meshlab*
          rm -r pymeshlab/lib
        fi
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        modules: xmlpatterns
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Install Ubuntu dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y mesa-common-dev libglu1-mesa-dev 
    - name: Environment variables
      id: envs
      run: |
        cd meshlab
        echo  ::set-output name=meshlab_commit::$(git rev-parse --short HEAD=7)
    - name: Cache MeshLab Build
      id: cache-meshlab-build
      uses: actions/cache@v2
      with:
        path: pymeshlab/lib
        key: ${{ runner.os }}-meshlab-${{steps.envs.outputs.meshlab_commit}}
    # not building meshlab -- we need to hit always cache
    - name: Build PyMeshLab ${{ matrix.pyversion }}
      run: |
        export PYTHON_VERSION=${{ matrix.pyversion }}
        sh install/${{ runner.os }}/build_pymeshlab.sh
    - name: Modify README.md
      run: |
        printf "# Do not use this branch\nThis branch is even with the master branch, except for the PyMeshLab module that is needed to build the documentation.\n" > README.md
    - name: Commit message
      id: commit_message
      run: |
        echo  ::set-output name=message::"$(git log -1 --pretty=%B)"
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add --force pymeshlab/meshlab*
        git add --force pymeshlab/lib/*
        git add README.md
        git commit -m "${{steps.commit_message.outputs.message}} and add libs" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: docs
        github_token: ${{ secrets.GITHUB_TOKEN }}
