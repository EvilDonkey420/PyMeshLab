name: MacOS

on:
  [push, pull_request]

jobs:
  macos_build_pymeshlab:
    name: Build PyMeshLab (MacOS)
    runs-on: macos-latest
    strategy:
      matrix:
        pyversion: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: checkout sub-submodule vcg
      run: |
        cd src/meshlab
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        modules: xmlpatterns
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    #- name: Environment variables
    #  id: envs
    #  run: |
    #    cd src/meshlab
    #    echo  ::set-output name=meshlab_commit::$(git rev-parse --short HEAD)
    #- name: Cache MeshLab Build
    #  id: cache-meshlab-build
    #  uses: actions/cache@v2
    #  with:
    #    path: pymeshlab/lib
    #    key: ${{ runner.os }}-meshlab-${{steps.envs.outputs.meshlab_commit}}
    - name: Install MeshLab-MacOS dependencies
    #  if: steps.cache-meshlab-build.outputs.cache-hit != 'true' && runner.os == 'macOS'
      run: |
        brew install libomp
    #- name: Set build MeshLab option
    #  id: meshlab-build-option
    #  if: steps.cache-meshlab-build.outputs.cache-hit == 'true'
    #  run: |
    #    echo  ::set-output name=meshlab-build-option::"--no-build-meshlab"
    - name: Build PyMeshLab ${{ matrix.pyversion }}
      run: |
        sh scripts/${{ runner.os }}/1_build.sh #${{steps.meshlab-build-option.outputs.meshlab-build-option}}
    - name: Deploy PyMeshLab ${{ matrix.pyversion }}
      run: |
        sh scripts/${{ runner.os }}/2_deploy.sh
    - name: Upload PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/upload-artifact@v2
      with:
        name: PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab/


  tests:
    name: Test PyMeshLab
    runs-on: macos-latest
    needs: macos_build_pymeshlab
    strategy:
      matrix:
        pyversion: [3.6, 3.7, 3.8]
    steps:
    #- uses: actions/checkout@v2
    - name: Download PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/download-artifact@v2
      with:
        name: PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab/
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Run Tests ${{ matrix.pyversion }}
      run: |
        pip install pytest numpy
        pytest -s pymeshlab
